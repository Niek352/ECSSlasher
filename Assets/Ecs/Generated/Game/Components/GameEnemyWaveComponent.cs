//------------------------------------------------------------------------------
// <auto-generated>
//		This code was generated by a tool (Genesis v2.4.7.0).
//
//
//		Changes to this file may cause incorrect behavior and will be lost if
//		the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameContext {

	public GameEntity EnemyWaveEntity { get { return GetGroup(GameMatcher.EnemyWave).GetSingleEntity(); } }
	public Ecs.Game.Components.EnemyWaveComponent EnemyWave { get { return EnemyWaveEntity.EnemyWave; } }
	public bool HasEnemyWave { get { return EnemyWaveEntity != null; } }

	public GameEntity SetEnemyWave(int newMaxEnemyCount)
	{
		if (HasEnemyWave)
		{
			throw new JCMG.EntitasRedux.EntitasReduxException(
				"Could not set EnemyWave!\n" +
				this +
				" already has an entity with Ecs.Game.Components.EnemyWaveComponent!",
				"You should check if the context already has a EnemyWaveEntity before setting it or use context.ReplaceEnemyWave().");
		}
		var entity = CreateEntity();
		#if !ENTITAS_REDUX_NO_IMPL
		entity.AddEnemyWave(newMaxEnemyCount);
		#endif
		return entity;
	}

	public void ReplaceEnemyWave(int newMaxEnemyCount)
	{
		#if !ENTITAS_REDUX_NO_IMPL
		var entity = EnemyWaveEntity;
		if (entity == null)
		{
			entity = SetEnemyWave(newMaxEnemyCount);
		}
		else
		{
			entity.ReplaceEnemyWave(newMaxEnemyCount);
		}
		#endif
	}

	public void RemoveEnemyWave()
	{
		EnemyWaveEntity.Destroy();
	}
}

//------------------------------------------------------------------------------
// <auto-generated>
//		This code was generated by a tool (Genesis v2.4.7.0).
//
//
//		Changes to this file may cause incorrect behavior and will be lost if
//		the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity
{
	public Ecs.Game.Components.EnemyWaveComponent EnemyWave { get { return (Ecs.Game.Components.EnemyWaveComponent)GetComponent(GameComponentsLookup.EnemyWave); } }
	public bool HasEnemyWave { get { return HasComponent(GameComponentsLookup.EnemyWave); } }

	public void AddEnemyWave(int newMaxEnemyCount)
	{
		var index = GameComponentsLookup.EnemyWave;
		var component = (Ecs.Game.Components.EnemyWaveComponent)CreateComponent(index, typeof(Ecs.Game.Components.EnemyWaveComponent));
		#if !ENTITAS_REDUX_NO_IMPL
		component.MaxEnemyCount = newMaxEnemyCount;
		#endif
		AddComponent(index, component);
	}

	public void ReplaceEnemyWave(int newMaxEnemyCount)
	{
		var index = GameComponentsLookup.EnemyWave;
		var component = (Ecs.Game.Components.EnemyWaveComponent)CreateComponent(index, typeof(Ecs.Game.Components.EnemyWaveComponent));
		#if !ENTITAS_REDUX_NO_IMPL
		component.MaxEnemyCount = newMaxEnemyCount;
		#endif
		ReplaceComponent(index, component);
	}

	public void CopyEnemyWaveTo(Ecs.Game.Components.EnemyWaveComponent copyComponent)
	{
		var index = GameComponentsLookup.EnemyWave;
		var component = (Ecs.Game.Components.EnemyWaveComponent)CreateComponent(index, typeof(Ecs.Game.Components.EnemyWaveComponent));
		#if !ENTITAS_REDUX_NO_IMPL
		component.MaxEnemyCount = copyComponent.MaxEnemyCount;
		#endif
		ReplaceComponent(index, component);
	}

	public void RemoveEnemyWave()
	{
		RemoveComponent(GameComponentsLookup.EnemyWave);
	}
}

//------------------------------------------------------------------------------
// <auto-generated>
//		This code was generated by a tool (Genesis v2.4.7.0).
//
//
//		Changes to this file may cause incorrect behavior and will be lost if
//		the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher
{
	static JCMG.EntitasRedux.IMatcher<GameEntity> _matcherEnemyWave;

	public static JCMG.EntitasRedux.IMatcher<GameEntity> EnemyWave
	{
		get
		{
			if (_matcherEnemyWave == null)
			{
				var matcher = (JCMG.EntitasRedux.Matcher<GameEntity>)JCMG.EntitasRedux.Matcher<GameEntity>.AllOf(GameComponentsLookup.EnemyWave);
				matcher.ComponentNames = GameComponentsLookup.ComponentNames;
				_matcherEnemyWave = matcher;
			}

			return _matcherEnemyWave;
		}
	}
}
